spring.profiles.active=dev

spring.application.name=PRODUCT-MANAGEMENT

# Actuator info
info.app.name=PRODUCT-MANAGEMENT
info.app.description=This Microservice is used for tenant management.
info.app.version=1.0.0
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,threaddump

# Server configuration
server.servlet.context-path=/pm
server.port=8082
server.tomcat.max-threads=200
server.tomcat.max-connections=1000
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# Log config
logging.godmode.enabled=false
logging.level.org.springframework=ERROR
logging.level.com.platform=INFO
logging.level.com.base=INFO
logging.level.com.tenant=INFO
logging.level.com.user=INFO
logging.level.com.i18n=INFO
logging.level.org.quartz=INFO

#spring.jpa.database-platform = org.hibernate.dialect.MySQL8InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

#Spring Jpa properties
spring.data.r2dbc.repositories.enabled = true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.format_sql=false

#Flyway config
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:/db/migration
spring.flyway.outOfOrder=true

# Email config - check email.properties
app.email.startup.loadtemplate=false
app.email.enabled=false
app.admin.email=noreplyeventemail@gmail.com
app.admin.email.password=<pwd>

#Google recaptcha config
google.recaptcha.enabled=false
google.recaptcha.site.key=<key>
google.recaptcha.secret.key=<key>
google.recaptcha.verify.url=https://www.google.com/recaptcha/api/siteverify

# GCS config (GCP)
app.nfs.path=/tmp/
app.gcs.enabled=true
app.gcs.bucket.default=mken-test-webapp.appspot.com
app.gcs.dev.config=false

# Redis Config
spring.embedded.redis.enabled=false
spring.cache.enabled=true
spring.cache.type=redis
spring.cache.redis.enable-statistics=false
#spring.redis.host=localhost
#spring.redis.port=6379
#spring.redis.password=<pwd>
#spring.cache.redis.time-to-live=600000
#spring.cache.redis.cache-null-values=false
#spring.cache.redis.use-key-prefix=true
#For spring 3.x
#spring.data.redis.database=0
spring.data.redis.host=localhost
spring.data.redis.port=6379
#spring.data.redis.username=devuser
#spring.data.redis.password=devpassword
#spring.data.redis.timeout=60000

# Hibernate search config(Lucene)
spring.jpa.properties.hibernate.search.backend.analysis.configurer=class:com.base.hibernate.search.configuration.AnalysisConfigurer
spring.jpa.properties.hibernate.search.backend.directory.type=local-filesystem
spring.jpa.properties.hibernate.search.backend.directory.root=${app.nfs.path}${spring.application.name}/lucene
#spring.jpa.properties.hibernate.search.default.refresh=10

# Front door configs
service.tm.frontdoor=http://localhost:8081/tm
service.user.frontdoor=http://localhost:8081/tm

#ClamAV antivirus
app.security.clamav.enabled=true
app.security.clamav.host=localhost
app.security.clamav.port=3310

# Spring job runner for background jobs (deprecated)
org.jobrunr.job-scheduler.enabled=false
org.jobrunr.background-job-server.enabled=false
org.jobrunr.dashboard.enabled=false
org.jobrunr.dashboard.port=9091

# Quartz Scheduler (inhouse replacement for jobrunr)
spring.quartz.enabled=true
#spring.quartz.auto-startup=false
spring.quartz.job-store-type=jdbc
# schema never allowed to be initialized on every startup by quartz, instead table creation scripts are copied over to flyway
spring.quartz.jdbc.initialize-schema=never
spring.quartz.properties.org.quartz.scheduler.instanceName = Quartz-Scheduler
spring.quartz.properties.org.quartz.scheduler.instanceId = AUTO
#spring.quartz.properties.org.quartz.scheduler.instanceIdGenerator.class = com.base.quartz.QuartzIdGenerator
spring.quartz.overwrite-existing-jobs=true
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval = 20000
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
#spring.quartz.properties.org.quartz.threadPool.threadCount = 20 //default 10 threads are utilized
spring.quartz.properties.org.quartz.threadPool.threadPriority = 5
#org.quartz.jobStore.misfireThreshold=1000 
#spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
#spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
